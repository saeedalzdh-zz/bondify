{"version":3,"sources":["constants/data.ts","app/market-listing/components/MarketItem.tsx","app/market-listing/MarketListing.tsx"],"names":["MARKET_LIST_HEADERS","id","label","minWidth","format","value","toString","split","toUpperCase","toLocaleString","parseFloat","toFixed","useStyles","makeStyles","root","cursor","MarketItem","columns","row","index","classes","history","useHistory","TableRow","hover","role","tabIndex","key","map","column","TableCell","className","align","onClick","marketSymbolId","push","encodeURIComponent","width","container","maxHeight","MarketListing","React","useState","page","setPage","rowsPerPage","setRowsPerPage","dispatch","useDispatch","useEffect","fetchMarket","useLoadCoinLists","rows","useSelector","state","markets","Box","height","TableContainer","Table","stickyHeader","aria-label","TableHead","style","TableBody","slice","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target"],"mappings":"qPAEaA,EAAsC,CACjD,CAACC,GAAI,OAAQC,MAAO,OAAQC,SAAU,KACtC,CACEF,GAAI,OACJC,MAAO,OACPC,SAAU,IACVC,OAAQ,SAACC,GAAD,OAA4BA,EAAMC,WAAWC,MAAM,KAAK,GAAGC,gBAErE,CACEP,GAAI,SACJC,MAAO,SACPC,SAAU,IACVC,OAAQ,SAACC,GAAD,OAA4BA,EAAMC,WAAWE,gBAEvD,CACEP,GAAI,YACJC,MAAO,aACPC,SAAU,IACVC,OAAQ,SAACC,GAAD,kBAAiCA,EAAMI,eAAe,YAEhE,CACER,GAAI,mBACJC,MAAO,qBACPC,SAAU,IACVC,OAAQ,SAACC,GAAD,kBACDK,WAAWL,EAAMC,YAAYK,QAAQ,O,yBCpB1CC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,OAAQ,aAiCGC,EA7B+B,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACtDC,EAAUR,IACZS,EAAUC,cAMd,OACE,kBAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAGC,IAAKR,GAChDF,EAAQW,KAAI,SAACC,GACZ,IAAMxB,EAAQa,EAAIW,EAAO5B,IACzB,OACE,kBAAC6B,EAAA,EAAD,CACEC,UAAWX,EAAQN,KACnBa,IAAKE,EAAO5B,GACZ+B,MAAOH,EAAOG,MACdC,QAAS,kBAbEC,EAagBhB,EAAIjB,QAZvCoB,EAAQc,KAAR,WAAiBC,mBAAmBF,KADtC,IAAqBA,IAeVL,EAAOzB,QAA2B,kBAAVC,EACrBwB,EAAOzB,OAAOC,GACdA,QCjBVO,EAAYC,YAAW,CAC3BC,KAAM,CACJuB,MAAO,QAETC,UAAW,CACTC,UAAW,OA6EAC,UAjEO,WACpB,IAAMpB,EAAUR,IADU,EAEF6B,IAAMC,SAAS,GAFb,mBAEnBC,EAFmB,KAEbC,EAFa,OAGYH,IAAMC,SAAS,IAH3B,mBAGnBG,EAHmB,KAGNC,EAHM,MARH,WACvB,IAAMC,EAAWC,cAEjBC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAQJI,GAEA,IAAMC,EAAOC,aAAqC,SAACC,GAAD,OAAWA,EAAMC,WAC7DtC,EAAUjB,EAWhB,OACE,kBAACwD,EAAA,EAAD,CAAKC,OAAO,OAAO1B,UAAWX,EAAQN,MACpC,kBAAC4C,EAAA,EAAD,CAAgB3B,UAAWX,EAAQkB,WACjC,kBAACqB,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACvC,EAAA,EAAD,KACGN,EAAQW,KAAI,SAACC,GAAD,OACX,kBAACC,EAAA,EAAD,CACEH,IAAKE,EAAO5B,GACZ+B,MAAOH,EAAOG,MACd+B,MAAO,CAAC5D,SAAU0B,EAAO1B,WAExB0B,EAAO3B,YAKhB,kBAAC8D,EAAA,EAAD,KACGZ,EACEa,MAAMtB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/CjB,KAAI,SAACV,EAAiBC,GACrB,OACE,kBAAC,EAAD,CACEF,QAASA,EACTC,IAAKA,EACLS,IAAKR,EACLA,MAAOA,UAOrB,kBAAC+C,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAOjB,EAAKkB,OACZzB,YAAaA,EACbF,KAAMA,EACN4B,aAhDmB,SAACC,EAAgBC,GACxC7B,EAAQ6B,IAgDJC,oBA7C0B,SAACF,GAC/B1B,GAAgB0B,EAAMG,OAAOtE,OAC7BuC,EAAQ","file":"static/js/5.ce1c1d62.chunk.js","sourcesContent":["import {MarketHeader} from \"./interfaces\";\n\nexport const MARKET_LIST_HEADERS: MarketHeader[] = [\n  {id: \"name\", label: \"Name\", minWidth: 170},\n  {\n    id: \"pair\",\n    label: \"Pair\",\n    minWidth: 100,\n    format: (value: string | number) => value.toString().split(\":\")[1].toUpperCase(),\n  },\n  {\n    id: \"symbol\",\n    label: \"Symbol\",\n    minWidth: 100,\n    format: (value: string | number) => value.toString().toUpperCase(),\n  },\n  {\n    id: \"marketCap\",\n    label: \"Market Cap\",\n    minWidth: 100,\n    format: (value: string | number) => `$ ${value.toLocaleString(\"en-US\")}`,\n  },\n  {\n    id: \"averageLastPrice\",\n    label: \"Average Last Price\",\n    minWidth: 100,\n    format: (value: string | number) =>\n      `$ ${parseFloat(value.toString()).toFixed(2)}`,\n  },\n];\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {MarketItemProps} from \"../../../constants/interfaces\";\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    cursor: \"pointer\",\n  },\n});\n\nconst MarketItem: React.FC<MarketItemProps> = ({columns, row, index}) => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  function handleClick(marketSymbolId: string) {\n    history.push(`/${encodeURIComponent(marketSymbolId)}`);\n  }\n\n  return (\n    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n      {columns.map((column) => {\n        const value = row[column.id];\n        return (\n          <TableCell\n            className={classes.root}\n            key={column.id}\n            align={column.align}\n            onClick={() => handleClick(row.id)}\n          >\n            {column.format && typeof value === \"number\"\n              ? column.format(value)\n              : value}\n          </TableCell>\n        );\n      })}\n    </TableRow>\n  );\n};\n\nexport default MarketItem;\n","import React, {useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {MARKET_LIST_HEADERS} from \"../../constants/data\";\nimport {MarketData} from \"../../constants/interfaces\";\nimport {fetchMarket} from \"../../actions\";\nimport {StateType} from \"../../constants/types\";\nimport MarketItem from \"./components/MarketItem\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 480,\n  },\n});\n\nconst useLoadCoinLists = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchMarket());\n  }, [dispatch]);\n};\n\nconst MarketListing = () => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  useLoadCoinLists();\n\n  const rows = useSelector<StateType, MarketData[]>((state) => state.markets);\n  const columns = MARKET_LIST_HEADERS;\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Box height=\"100%\" className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{minWidth: column.minWidth}}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row: MarketData, index: number) => {\n                return (\n                  <MarketItem\n                    columns={columns}\n                    row={row}\n                    key={index}\n                    index={index}\n                  />\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Box>\n  );\n};\n\nexport default MarketListing;\n"],"sourceRoot":""}